def main():


    import ast
    from unidecode import unidecode

   
    with open('Gabarito_txt_Francês.txt', 'r') as r:
        g = r.read()

    # Converting string inside .txt file to dict
    Gabarito = ast.literal_eval(g)


    # Inputs do usuário:
    checar_verbos = []
    checar_tempos = []
    checar_respostas = []
    checar_se_gabaritou = []

    # 'Respostas' do programa. Os gabaritos:
    Respostas_Corretas = []
    Correção = []
    pronomes_lista = ['Je', 'Tu', 'Il/Elle/On', 'Nous', 'Vous', 'Ils/Elles']
    tipos_de_verbos = list(Gabarito.keys())



    verbos_irregulares = sorted(list(Gabarito['IRREGULIERS'].keys()))
                          
    verbos_regulares_1 = sorted(list(Gabarito['REGULIERS_1'].keys()))

    verbos_regulares_2 = sorted(list(Gabarito['REGULIERS_2'].keys()))



    print('\n\nCONJUGAISON DES VERBES EN FRAÇAIS!\n')

    Conjugação_Ou_Gabarito = int(input('\nTecle 1 para conjugar verbos ou 2 para acessar o gabarito de conjugação de algum verbo: '))

    if Conjugação_Ou_Gabarito == 1:
            

        Tipo_De_Verbo_Escolhido = []


        verbo_reg_ou_irreg = int(input('\nTecle 1 para conjugar verbos regulares ou 2 para verbos irregulares: '))

        if verbo_reg_ou_irreg == 1:
            regulares = int(input('\nTecle 1 para verbos do grupo I (-ER) ou 2 (-IR) para verbos do segundo grupo II: '))
            if regulares == 1:
                Tipo_De_Verbo_Escolhido += ['REGULIERS_1']
                print(f'\n\nVerbos disponíveis - Regulares do 1° grupo / De terminação ER:\n\n{verbos_regulares_1}')

            elif regulares == 2:
                Tipo_De_Verbo_Escolhido += ['REGULIERS_2']
                print(f'\n\nVerbos disponíveis - Regulares do 2° grupo / De terminação IR:\n\n{verbos_regulares_2}')
            
        elif verbo_reg_ou_irreg == 2:
            Tipo_De_Verbo_Escolhido += ['IRREGULIERS']
            print(f'\n\nVerbos disponíveis - Irregulares:\n\n{verbos_irregulares}')


        Verbos_Disponiveis = list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys())


        quantos_verbos = int(input(f'\nIndique a quantidade de verbos a serem conjugados: '))

        for u in range (quantos_verbos):
            verbos_user = input(f'\nDigite o verbo {u+1}: ').upper()
            while verbos_user not in Verbos_Disponiveis:
                print('\n\nENTRADA INVÁLIDA. Tente novamente.\n')
                verbos_user = input(f'\nDigite o verbo {u+1}: ').upper()
                
            else:
                checar_verbos.append(verbos_user)



        Tempos_Verbais_Disponíveis = list(Gabarito[Tipo_De_Verbo_Escolhido[0]][checar_verbos[0]].keys())

        print(f'\n\nTempos verbais disponíveis:\n\n{Tempos_Verbais_Disponíveis}')

        quantos_tempos = int(input(f'\nIndique a quantidade de tempos verbais: '))

        for i in range (quantos_tempos):
            tempos_user = input(f'\nDigite o tempo verbal {i+1}: ').upper()
            while tempos_user not in Tempos_Verbais_Disponíveis:
                print('\n\nENTRADA INVÁLIDA. Tente novamente.\n')
                tempos_user = input(f'\nDigite o tempo verbal {i+1}: ').upper()
            else:    
                checar_tempos.append(tempos_user)


        # Printando o nome do verbo escolhido pelo usuário
        for l in checar_verbos:
            print(f'\n\n{l}:')

        # Printando o nome do tempo verbal escolhido pelo usuário
            for j in checar_tempos:
                print(f'\n{j}')
            
                Je = input(f'\nJe:               ').lower()
                checar_respostas.append(Je)
           
                Tu = input(f'Tu:               ').lower()
                checar_respostas.append(Tu)
            
                Il_Elle_On = input(f'Il/Elle/On:       ').lower()
                checar_respostas.append(Il_Elle_On)
                
                Nous = input(f'Nous:             ').lower()
                checar_respostas.append(Nous)
                
                Vous = input(f'Vous:             ').lower()
                checar_respostas.append(Vous)
                
                Ils_Elles = input(f'Ils/Elles:        ').lower()
                checar_respostas.append(Ils_Elles)

        print('\n')

        # For loop para gerar uma lista com o gabarito personalizado dos inputs do usuário
        for m in checar_verbos:
            for k in checar_tempos:
                for s in pronomes_lista:
                    Respostas_Corretas.append(Gabarito[Tipo_De_Verbo_Escolhido[0]][m][k][s])
                    

        # For loop para printar 'certo' ou 'errado' para cada resposta do usuário
        for g in range(len(checar_respostas)):
            if checar_respostas[g] == Respostas_Corretas[g]:
                Correção.append('Resposta correta!')
            else:
                Correção.append('Resposta errada :(')


        # Fiz isso porque eu esvazio a lista 'checar_respostas' no próximo código,
        # e eu preciso dela para comparar com 'Respostas Corretas no final do programa
        # para printar uma mensagem no caso de o usuário ter gabaritado
        checar_respostas2 = checar_respostas

        # Criado para a subsequente formatação dos resultados
        limite = 15
        

        # For loop para printar correção formatada
        for m in checar_verbos:
            print(f'\n{m}:')
            for k in checar_tempos:
                print(f'\n{k}\n')
                for(a, b, c) in zip(pronomes_lista, checar_respostas, Correção):
                    print(f'{a}: {(limite - len(a)) * " "} {b} {(limite - len(b)) * " "} --> {c}')
                checar_respostas = checar_respostas[6:]
                Correção = Correção[6:]

        if checar_respostas2 == Respostas_Corretas:
            print('\nPARABÉNS! VOCÊ GABARITOU!')
            


        restart = input(f'\nTecle "r" para reiniciar o programa, "g" para acessar o gabarito e reiniciar o programa, ou "e" para encerrar a aplicação: ').lower()
        if restart == "r":
            main()

        elif restart == "g":
            print('\n')
            print('\n')
            print('GABARITO -->')
            for m in checar_verbos:
                print(f'\n{m}:')
                for k in checar_tempos:
                    print(f'\n{k}\n')
                    for(a, b) in zip(pronomes_lista, Respostas_Corretas):
                        print(f'{a}: {(limite - len(a)) * " "} {b}')
                    Respostas_Corretas = Respostas_Corretas[6:]
            print('\n')
                    
            main()

        else:
            exit()


    elif Conjugação_Ou_Gabarito == 2:

        print(f'\n\nVerbos regulares do tipo I:\n{sorted(list(Gabarito["REGULIERS_1"].keys()))}\n')
        print(f'\nVerbos regulares do tipo II:\n{sorted(list(Gabarito["REGULIERS_2"].keys()))}\n')
        print(f'\nVerbos irregulares:\n{sorted(list(Gabarito["IRREGULIERS"].keys()))}')

        tipo_de_verbo = int(input('\n\nDigite 1 para consultar um verbo regular do tipo I, 2 para verbo regular do tipo II, e 3 para verbo irregular: '))

        Tipo_De_Verbo_Escolhido = []
        Verbo_User = []

        if tipo_de_verbo == 1:
            Tipo_De_Verbo_Escolhido.append('REGULIERS_1')
            R_1 = input('\nDigite o verbo regular do tipo I que deseja consultar: ').upper()
            
            while R_1 not in list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys()):
                R_1 = input('\nEntrada inválida. Digite o verbo novamente: ').upper()
            else:  
                Verbo_User.append(R_1)

            
        elif tipo_de_verbo == 2:
            Tipo_De_Verbo_Escolhido.append('REGULIERS_2')
            R_2 = input('\nDigite o verbo regular do tipo II que deseja consultar: ').upper()
            
            while R_2 not in list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys()):
                R_2 = input('\nEntrada inválida. Digite o verbo novamente: ').upper()
            else:
                Verbo_User.append(R_2)
                

        elif tipo_de_verbo == 3:
            Tipo_De_Verbo_Escolhido.append('IRREGULIERS')
            I = input('\nDigite o verbo irregular que deseja consultar: ').upper()

            while I not in list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys()):
                I = input('\nEntrada inválida. Digite o verbo novamente: ').upper()
            else:
                Verbo_User.append(I)
                

        Tempos_Verbais_Disponíveis = list(Gabarito['IRREGULIERS']['ÊTRE'].keys())

        limite = 15
        
        print(f'\n\nGABARITO DO VERBO {Verbo_User[0]} -->')
        for i in Tempos_Verbais_Disponíveis:
            print(f'\n{i}\n')
            for j in pronomes_lista:
                print(f'{j}: {(limite - len(j)) * " "} {Gabarito[Tipo_De_Verbo_Escolhido[0]][Verbo_User[0]][i][j]}')
                

        main()


main()



















   




        

 
    
    




            

















    






        
        
    












    
    































      
