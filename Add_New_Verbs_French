def main():
    
    import ast
    from unidecode import unidecode


    with open('Gabarito_txt_Francês.txt', 'r') as r:
        g = r.read()
        
    # Converte string em dicionário. A string está na formatação exata de dicionário
    Gabarito = ast.literal_eval(g)
    

    with open('Tradutor_txt_Francês.txt', 'r') as t:
        tt = t.read()     
    Tradutor = ast.literal_eval(tt)
    

    pronomes_lista = ['Je', 'Tu', 'Il/Elle/On', 'Nous', 'Vous', 'Ils/Elles']


    dic_verbo_novo = {'TROCA_VERBO':
                            {'PRÉSENT': {'Je': 'suis', 'Tu': 'es', 'Il/Elle/On': 'est', 'Nous': 'sommes', 'Vous': 'êtes', 'Ils/Elles': 'sont'},
                             'PASSÉ COMPOSÉ': {'Je': "'ai été", 'Tu': 'as été', 'Il/Elle/On': 'a été', 'Nous': 'avons été', 'Vous': 'avez été', 'Ils/Elles': 'ont été'},
                             'IMPARFAIT': {'Je': "'étais", 'Tu': 'étais', 'Il/Elle/On': 'était', 'Nous': 'étions', 'Vous': 'étiez', 'Ils/Elles': 'étaient'},
                             'PLUS-QUE-PARFAIT': {'Je': "'avais été", 'Tu': 'avais été', 'Il/Elle/On': 'avait été', 'Nous': 'avions été', 'Vous': 'aviez été', 'Ils/Elles': 'avaient été'},
                             'FUTUR SIMPLE': {'Je': 'serai', 'Tu': 'seras', 'Il/Elle/On': 'sera', 'Nous': 'serons', 'Vous': 'serez', 'Ils/Elles': 'seront'}}}

    dic_tradutor_novo = {'TROCA_VERBO': 'Ir'}
    

    print('\n\nADICIONE NOVOS VERBOS AO DATABASE DE FRANCÊS!\n')

    Gabarito_Ou_Adicionar = int(input('Tecle 1 para adicionar um verbo ou 2 para consultar o gabarito de algum verbo: '))    

    if Gabarito_Ou_Adicionar == 1:
        
        Tipo_De_Verbo_Escolhido = []

        tipo_de_verbo = input('\nTecle 1 para adicionar um verbo Regular I, 2 para Regular II, e 3 para adicionar um verbo Irregular: ')

        if tipo_de_verbo == '1':
            Tipo_De_Verbo_Escolhido += ['REGULIERS_1']
            print(f'\n\nVerbos REGULARES DO TIPO I já presentes em nosso database:\n\n{sorted(list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys()))}\n')            

        elif tipo_de_verbo == '2':
            Tipo_De_Verbo_Escolhido += ['REGULIERS_2']
            print(f'\n\nVerbos REGULARES DO TIPO II já presentes em nosso database:\n\n{sorted(list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys()))}\n')

        elif tipo_de_verbo == '3':
            Tipo_De_Verbo_Escolhido += ['IRREGULIERS']
            print(f'\n\nVerbos IRREGULARES já presentes em nosso database:\n\n{sorted(list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys()))}\n')
            


        verbo = input('\nDigite o verbo a ser adicionado: ').upper()

        verbo_novo_list = []
            
        Verbes_Reguliers_1 = list(Gabarito['REGULIERS_1'].keys())
        Verbes_Reguliers_2 = list(Gabarito['REGULIERS_2'].keys())
        Verbes_Irreguliers = list(Gabarito['IRREGULIERS'].keys())
        
        All_Verbs = Verbes_Reguliers_1 + Verbes_Reguliers_2 + Verbes_Irreguliers
        
        while verbo in All_Verbs:
            verbo = input('\nEste verbo já se encontra em nosso databse. Escolha outro verbo: ').upper()

        else:
            dic_verbo_novo[verbo] = dic_verbo_novo.pop('TROCA_VERBO')
            verbo_novo_list.append(verbo)


    

        tradução = input('\nDigite a tradução do verbo em portugês: ').upper()

        dic_tradutor_novo[verbo_novo_list[0]] = dic_tradutor_novo.pop('TROCA_VERBO')

        dic_tradutor_novo[verbo_novo_list[0]] = tradução

        Tradutor[Tipo_De_Verbo_Escolhido[0]].update(dic_tradutor_novo)



        Tempos_Verbais_Disponíveis = list(Gabarito['IRREGULIERS']['ÊTRE'].keys())

        Respostas = []

        print(f'\n\n{verbo} / {Tradutor[Tipo_De_Verbo_Escolhido[0]][verbo_novo_list[0]]}')

        # Printando na tela do usuário
        for i in Tempos_Verbais_Disponíveis:
            print(f'\n{i}: ')
            
            Je = input(f'\nJe:               ').lower()
            Respostas.append(Je)
       
            Tu = input(f'Tu:               ').lower()
            Respostas.append(Tu)
        
            Il_Elle_On = input(f'Il/Elle/On:       ').lower()
            Respostas.append(Il_Elle_On)
            
            Nous = input(f'Nous:             ').lower()
            Respostas.append(Nous)
            
            Vous = input(f'Vous:             ').lower()
            Respostas.append(Vous)
            
            Ils_Elles = input(f'Ils/Elles:        ').lower()
            Respostas.append(Ils_Elles)
            


        # Atualizando dic_verbo_novo com o gabarito correto
        for k in Tempos_Verbais_Disponíveis:
            for j in pronomes_lista:
                dic_verbo_novo[verbo][k][j] = Respostas[0]
                Respostas = Respostas[1:]

                

        restart = input('\n\nRevise sua conjugação. Se estiver correta tecle 1, caso contrário tecle 2 e reiniciaremos o programa: ')

        if restart == '1':
            Gabarito[Tipo_De_Verbo_Escolhido[0]].update(dic_verbo_novo)
            with open('Gabarito_txt_Francês.txt', 'w') as f:
                f.write(str(Gabarito))

            with open('Tradutor_txt_Francês.txt', 'w') as t:
                t.write(str(Tradutor))
            
            print(f'\nVerbo {verbo} adicionado com sucesso :)')
            main()
        else:
            main()

            

    elif Gabarito_Ou_Adicionar == 2:
        
        print(f'\n\nVerbos regulares do tipo I:\n{sorted(list(Gabarito["REGULIERS_1"].keys()))}\n')
        print(f'\nVerbos regulares do tipo II:\n{sorted(list(Gabarito["REGULIERS_2"].keys()))}\n')
        print(f'\nVerbos irregulares:\n{sorted(list(Gabarito["IRREGULIERS"].keys()))}')

        tipo_de_verbo = int(input('\n\nDigite 1 para consultar um verbo regular do tipo I, 2 para verbo regular do tipo II, e 3 para verbo irregular: '))

        Tipo_De_Verbo_Escolhido = []
        Verbo_User = []

        if tipo_de_verbo == 1:
            Tipo_De_Verbo_Escolhido.append('REGULIERS_1')
            R_1 = input('\nDigite o verbo regular do tipo I que deseja consultar: ').upper()
            
            while R_1 not in list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys()):
                R_1 = input('\nEntrada inválida. Digite o verbo novamente: ').upper()
            else:  
                Verbo_User.append(R_1)

            
        elif tipo_de_verbo == 2:
            Tipo_De_Verbo_Escolhido.append('REGULIERS_2')
            R_2 = input('\nDigite o verbo regular do tipo II que deseja consultar: ').upper()
            
            while R_2 not in list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys()):
                R_2 = input('\nEntrada inválida. Digite o verbo novamente: ').upper()
            else:
                Verbo_User.append(R_2)
                

        elif tipo_de_verbo == 3:
            Tipo_De_Verbo_Escolhido.append('IRREGULIERS')
            I = input('\nDigite o verbo irregular que deseja consultar: ').upper()

            while I not in list(Gabarito[Tipo_De_Verbo_Escolhido[0]].keys()):
                I = input('\nEntrada inválida. Digite o verbo novamente: ').upper()
            else:
                Verbo_User.append(I)
                

        Tempos_Verbais_Disponíveis = list(Gabarito['IRREGULIERS']['ÊTRE'].keys())

        limite = 15
        
        print(f'\n\nGABARITO DO VERBO {Verbo_User[0]} / {Tradutor[Tipo_De_Verbo_Escolhido[0]][Verbo_User[0]]} -->')
        for i in Tempos_Verbais_Disponíveis:
            print(f'\n{i}\n')
            for j in pronomes_lista:
                print(f'{j}: {(limite - len(j)) * " "} {Gabarito[Tipo_De_Verbo_Escolhido[0]][Verbo_User[0]][i][j]}')
                
        
        reinicia = int(input('\n\nTecle 1 para modificar o gabarito ou 2 para reiniciar o programa: '))

    
        if reinicia == 1:
            
            dic_verbo_novo[Verbo_User[0]] = dic_verbo_novo.pop('TROCA_VERBO')


  

            tradução = input('\nDigite a tradução do verbo em portugês: ').upper()

            dic_tradutor_novo[Verbo_User[0]] = dic_tradutor_novo.pop('TROCA_VERBO')

            dic_tradutor_novo[Verbo_User[0]] = tradução

            Tradutor[Tipo_De_Verbo_Escolhido[0]].update(dic_tradutor_novo)

                

            Respostas = []

            print(f'\n\n{Verbo_User[0]} / {Tradutor[Tipo_De_Verbo_Escolhido[0]][Verbo_User[0]]}')

            # Printando na tela do usuário
            for i in Tempos_Verbais_Disponíveis:
                print(f'\n{i}: ')
                
                Je = input(f'\nJe:               ').lower()
                Respostas.append(Je)
           
                Tu = input(f'Tu:               ').lower()
                Respostas.append(Tu)
            
                Il_Elle_On = input(f'Il/Elle/On:       ').lower()
                Respostas.append(Il_Elle_On)
                
                Nous = input(f'Nous:             ').lower()
                Respostas.append(Nous)
                
                Vous = input(f'Vous:             ').lower()
                Respostas.append(Vous)
                
                Ils_Elles = input(f'Ils/Elles:        ').lower()
                Respostas.append(Ils_Elles)
                


            # Atualizando dic_verbo_novo com o gabarito correto
            for k in Tempos_Verbais_Disponíveis:
                for j in pronomes_lista:
                    dic_verbo_novo[Verbo_User[0]][k][j] = Respostas[0]
                    Respostas = Respostas[1:]

                    

            restart = input('\n\nRevise sua conjugação. Se estiver correta tecle 1, caso contrário tecle 2 e reiniciaremos o programa: ')

            if restart == '1':
                Gabarito[Tipo_De_Verbo_Escolhido[0]].update(dic_verbo_novo)
                with open('Gabarito_txt_Francês.txt', 'w') as f:
                    f.write(str(Gabarito))

                with open('Tradutor_txt_Francês.txt', 'w') as t:
                    t.write(str(Tradutor))
                
                print(f'\nGabarito do verbo {Verbo_User[0]} atualizado com sucesso :)')
                main()
            else:
                main()

            
        else:
            main()
            
        
main()






                                                                                                                                                                                                                                                                                                                                                                                                             











        









    
    
    


   






    
    



















